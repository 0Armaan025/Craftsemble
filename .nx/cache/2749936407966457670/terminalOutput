
> hank-project-1@0.1.0 build
> nx exec -- vite build

[36mvite v4.3.9 [32mbuilding for production...[36m[39m
transforming...
[32mâœ“[39m 134 modules transformed.
rendering chunks...
[33mwarnings when minifying css:
â–² [WARNING] CSS nesting syntax is not supported in the configured target environment ("chrome87", "edge88", "es2020", "firefox78", "safari14") [unsupported-css-nesting]

    <stdin>:248:2:
      248 â”‚   &__image {
          â•µ   ^


â–² [WARNING] A nested style rule cannot start with "img" because it looks like the start of a declaration [css-syntax-error]

    <stdin>:254:4:
      254 â”‚     img {
          â”‚     ~~~
          â•µ     :is(img)

  To start a nested style rule with an identifier, you need to wrap the identifier in ":is(...)" to prevent the rule from being parsed as a declaration.


â–² [WARNING] CSS nesting syntax is not supported in the configured target environment ("chrome87", "edge88", "es2020", "firefox78", "safari14") [unsupported-css-nesting]

    <stdin>:261:2:
      261 â”‚   &__buttons {
          â•µ   ^


â–² [WARNING] A nested style rule cannot start with "button" because it looks like the start of a declaration [css-syntax-error]

    <stdin>:268:4:
      268 â”‚     button {
          â”‚     ~~~~~~
          â•µ     :is(button)

  To start a nested style rule with an identifier, you need to wrap the identifier in ":is(...)" to prevent the rule from being parsed as a declaration.


â–² [WARNING] CSS nesting syntax is not supported in the configured target environment ("chrome87", "edge88", "es2020", "firefox78", "safari14") [unsupported-css-nesting]

    <stdin>:306:2:
      306 â”‚   &:hover {
          â•µ   ^


â–² [WARNING] A nested style rule cannot start with "img" because it looks like the start of a declaration [css-syntax-error]

    <stdin>:1499:4:
      1499 â”‚     img {
           â”‚     ~~~
           â•µ     :is(img)

  To start a nested style rule with an identifier, you need to wrap the identifier in ":is(...)" to prevent the rule from being parsed as a declaration.

[39m
computing gzip size...
[2mdist/hank-project-1/[22m[32mindex.html                        [39m[1m[2m    1.32 kB[22m[1m[22m[2m â”‚ gzip:   0.70 kB[22m
[2mdist/hank-project-1/[22m[32massets/collab_badge-2071f21f.png  [39m[1m[2m   86.80 kB[22m[1m[22m
[2mdist/hank-project-1/[22m[32massets/badge-875883ce.png         [39m[1m[2m  154.61 kB[22m[1m[22m
[2mdist/hank-project-1/[22m[32massets/badge3-1f39b4bf.png        [39m[1m[2m  204.22 kB[22m[1m[22m
[2mdist/hank-project-1/[22m[32massets/logo-a857e28e.png          [39m[1m[2m  281.46 kB[22m[1m[22m
[2mdist/hank-project-1/[22m[32massets/badge2-66194230.png        [39m[1m[2m1,832.33 kB[22m[1m[22m
[2mdist/hank-project-1/[22m[35massets/index-13d91d77.css         [39m[1m[2m   26.20 kB[22m[1m[22m[2m â”‚ gzip:   5.89 kB[22m
[33m
(!) Some chunks are larger than 500 kBs after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.[39m
[2mdist/hank-project-1/[22m[36massets/web-vitals-9f4c2f45.js     [39m[1m[2m    7.05 kB[22m[1m[22m[2m â”‚ gzip:   2.59 kB[22m
[2mdist/hank-project-1/[22m[36massets/index-ca2dbc55.js          [39m[1m[33m  978.23 kB[39m[22m[2m â”‚ gzip: 288.42 kB[22m
[32mâœ“ built in 9.88s[39m
